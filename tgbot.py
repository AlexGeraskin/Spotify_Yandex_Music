import asyncio
import logging
import sys
import os
from dotenv import load_dotenv

from aiogram import Bot, Dispatcher, types
from aiogram.enums import ParseMode
from aiogram.filters import CommandStart
from aiogram.types import Message
from aiogram.client.default import DefaultBotProperties

from main import consume_link

# Load .env and get the value of "TOKEN"
load_dotenv()
TOKEN = os.getenv("TOKEN")

# All handlers should be attached to the Router (or Dispatcher)
dp = Dispatcher()

@dp.message(CommandStart())
async def command_start_handler(message: Message, bot: Bot):
    
    await message.answer(f"–ü—Ä–∏–≤–µ—Ç, <b>{message.from_user.full_name}</b>!")
    await bot.send_message(message.from_user.id,f"–Ø –°–ø–æ—Ç–∏-–Ø–Ω–¥–µ–∫—Å –±–æ—Ç. \n\n–ü—Ä–∏—à–ª–∏ –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç—Ä–µ–∫ –Ω–∞ –Ø–Ω–¥–µ–∫—Å –º—É–∑—ã–∫–µ (–≤–∏–¥–∞ https://music.yandex.ru/album/1111111/track/1111111), –∞ —è –ø—Ä–∏—à–ª—é —Ç–µ–±–µ —Å—Å—ã–ª–∫—É –Ω–∞ —ç—Ç–æ—Ç —Ç—Ä–µ–∫ –≤ –°–ø–æ—Ç–∏—Ñ–∞–µ. \n\n–ò–ª–∏ –Ω–∞–æ–±–æ—Ä–æ—Ç - –ø—Ä–∏—à–ª–∏ –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç—Ä–µ–∫ –≤ –°–ø–æ—Ç–∏—Ñ–∞–µ –∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –Ω–∞–π—Ç–∏ –µ–≥–æ –≤ –Ø–Ω–¥–µ–∫—Å–µ üòè\n\n<tg-spoiler>–ï—Å–ª–∏ –º–Ω–µ –Ω–µ —É–¥–∞—Å—Ç—Å—è –Ω–∞–π—Ç–∏ —Ç—Ä–µ–∫ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ—Ç–æ–º—É —á—Ç–æ –≤ –Ø–Ω–¥–µ–∫—Å –º—É–∑—ã–∫–µ –Ω–µ—Ç –∑–∞—Ä—É–±–µ–∂–Ω—ã—Ö —Ä–µ–ª–∏–∑–æ–≤ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ª–µ—Ç), —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –Ω–∞–π—Ç–∏ –∞–ª—å–±–æ–º –∏–ª–∏ –∞—Ä—Ç–∏—Å—Ç–∞.</tg-spoiler>")
    
@dp.message()
async def echo_handler(message: types.Message):
    await message.answer(f"–ü—Ä–∏–Ω—è–ª, –∏—â—É üëÄ")
    given_link = message.text

    try:
        new_link = consume_link(given_link)
        await message.answer(f"{new_link}")
    except:
        await message.answer(f"–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –õ–∏–±–æ –ø–µ—Å–Ω–∏ –Ω–µ—Ç –Ω–∞ —ç—Ç–æ–º —Å—Ç—Ä–∏–º–∏–Ω–≥–µ, –ª–∏–±–æ –º—ã –Ω–µ —Å–º–æ–≥–ª–∏ –µ–µ –Ω–∞–π—Ç–∏(")

async def main() -> None:

    # Initialize Bot instance with a default parse mode which will be passed to all API calls
    bot = Bot(token=TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))

    # Don't need pending updates so drop them:
    await bot.delete_webhook(drop_pending_updates=True)
    
    await dp.start_polling(bot)

if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO, stream=sys.stdout)
    asyncio.run(main())